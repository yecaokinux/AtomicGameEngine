{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"fileD",
				"fileDirectory	const"
			],
			[
				"ex",
				"existsSync	function"
			],
			[
				"mk",
				"mkdirSync	function"
			],
			[
				"yam",
				"yamlData	const"
			],
			[
				"me",
				"metadata	parameter"
			],
			[
				"options",
				"optionsDescription	property"
			],
			[
				"write",
				"writeFileSync	function"
			],
			[
				"re",
				"registerTask"
			],
			[
				"rule",
				"rulePaths	const"
			],
			[
				"Lin",
				"Linter	class"
			],
			[
				"tool",
				"tooltip-color"
			],
			[
				"toolt",
				"tooltip-color"
			],
			[
				"popo",
				"popover-color"
			],
			[
				"Toolti",
				"TooltipPosition	alias"
			],
			[
				"CLICK",
				"CLICK_TARGET_ONLY	var"
			],
			[
				"Popov",
				"PopoverPosition	enum"
			],
			[
				"line",
				"line-height"
			],
			[
				"over",
				"overflow-y"
			],
			[
				"pos",
				"position"
			],
			[
				"const",
				"constructor	keyword"
			],
			[
				"IPop",
				"IPopoverState	interface"
			],
			[
				"react",
				"ReactElement	interface"
			],
			[
				"crea",
				"createElement	function"
			],
			[
				"getE",
				"getElementById	method"
			],
			[
				"ass",
				"assertSpinnerWasRendered	local function"
			],
			[
				"marg",
				"margin-right"
			],
			[
				"querySe",
				"querySelector	method"
			],
			[
				"cont",
				"containerElement	let"
			],
			[
				"elem",
				"elements	const"
			],
			[
				"Assert",
				"assertValidSpinnerInside	function"
			],
			[
				"createS",
				"createSpinners	function"
			],
			[
				"assert",
				"assertValidSpinnerInside	function"
			],
			[
				"getEle",
				"getElementsByClassName	method"
			],
			[
				"class",
				"classList	property"
			],
			[
				"length",
				"lengthOf	method"
			],
			[
				"get",
				"getElementsByTagName	method"
			],
			[
				"chid",
				"children	property"
			],
			[
				"cla",
				"className	property"
			],
			[
				"Bl",
				"Blueprint	module"
			],
			[
				"pt-spin",
				"pt-spinner-track-color"
			],
			[
				"pt-sp",
				"pt-spinner-width"
			],
			[
				"querys",
				"querySelectorAll	method"
			],
			[
				"bacgroun",
				"background-image"
			],
			[
				"s",
				"style	property"
			],
			[
				"chi",
				"hasChildNodes	method"
			],
			[
				"querySele",
				"querySelectorAll	method"
			],
			[
				"backgroun",
				"background-image"
			],
			[
				"spinner",
				"spinner-head-opacity"
			],
			[
				"back",
				"background-image"
			],
			[
				"tran",
				"transform-origin"
			],
			[
				"margin",
				"margin-top"
			],
			[
				"spinn",
				"spinner-size"
			],
			[
				"Function",
				"FunctionExpression	interface"
			],
			[
				"len",
				"lengthOf	method"
			],
			[
				"pt-cont",
				"pt-control-indicator"
			],
			[
				"type",
				"TypeFlags	enum"
			],
			[
				"f",
				"fileName	property"
			],
			[
				"is",
				"isInFunctionType	property"
			],
			[
				"visitF",
				"visitFunctionType	method"
			],
			[
				"namespace",
				"namespaceFlag	let"
			]
		]
	},
	"buffers":
	[
		{
			"file": "CHANGELOG.md",
			"settings":
			{
				"buffer_size": 11820,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/rules/radixRule.ts",
			"settings":
			{
				"buffer_size": 1490,
				"line_ending": "Unix"
			}
		},
		{
			"file": ".travis.yml",
			"settings":
			{
				"buffer_size": 89,
				"line_ending": "Unix"
			}
		},
		{
			"file": "package.json",
			"settings":
			{
				"buffer_size": 1038,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/tslint.ts",
			"settings":
			{
				"buffer_size": 3305,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test/files/rules/label-undefined.test.ts",
			"settings":
			{
				"buffer_size": 662,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/rules/labelUndefinedRule.ts",
			"settings":
			{
				"buffer_size": 2198,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/rules/whitespaceRule.ts",
			"settings":
			{
				"buffer_size": 9430,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/language/utils.ts",
			"settings":
			{
				"buffer_size": 4553,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/rules/noVarKeywordRule.ts",
			"settings":
			{
				"buffer_size": 2334,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/rules/alignRule.ts",
			"settings":
			{
				"buffer_size": 3352,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "rene",
		"selected_items":
		[
			[
				"rene",
				"TypeScript: Rename"
			],
			[
				":w",
				":w - Save"
			],
			[
				":W",
				":w - Save"
			],
			[
				"RENAME",
				"TypeScript: Rename"
			],
			[
				"rename",
				"TypeScript: Rename"
			],
			[
				"findr",
				"TypeScript: FindReferences"
			],
			[
				"findre",
				"TypeScript: FindReferences"
			],
			[
				"findref",
				"TypeScript: FindReferences"
			],
			[
				"find",
				"TypeScript: FindReferences"
			],
			[
				"types",
				"Set Syntax: TypeScript"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"goto",
				"TypeScript: GoToDefinition"
			],
			[
				"disco",
				"Package Control: Discover Packages"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"set type",
				"Set Syntax: TypeScript"
			],
			[
				"console",
				"Snippet: console log"
			],
			[
				"typesc",
				"TypeScript: QuickInfoDocumentation"
			],
			[
				"sig",
				"TypeScript: SignatureInfo"
			],
			[
				"typescript ",
				"TypeScript: SignatureInfo"
			],
			[
				"package insta",
				"Package Control: Install Package"
			],
			[
				"package install ",
				"Package Control: Advanced Install Package"
			],
			[
				"package install",
				"Package Control: Install Package"
			],
			[
				"find ",
				"TypeScript: FindReferences"
			],
			[
				"set types",
				"Set Syntax: TypeScript"
			],
			[
				"findRe",
				"TypeScript: FindReferences"
			],
			[
				"typ",
				"Set Syntax: TypeScriptReact"
			],
			[
				"Package Control: ",
				"Package Control: Discover Packages"
			]
		],
		"width": 593.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/jkillian/projects/tslint",
		"/Users/jkillian/projects/tslint/src",
		"/Users/jkillian/projects/tslint/src/rules"
	],
	"file_history":
	[
		"/Users/jkillian/projects/tslint/src/rules/commentFormatRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/jsdocFormatRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/interfaceNameRule.ts",
		"/Users/jkillian/projects/tslint/src/language/rule/rule.ts",
		"/Users/jkillian/projects/tslint/src/rules/noStringLiteralRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/noSwitchCaseFallThroughRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/noUnusedVariableRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/oneLineRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/quotemarkRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/radixRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/trailingCommaRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/typedefRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/typedefWhitespaceRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/useStrictRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/variableNameRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/whitespaceRule.ts",
		"/Users/jkillian/projects/tslint/tslint.json",
		"/Users/jkillian/projects/tslint/src/rules/indentRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/forinRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/eoflineRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/labelUndefinedRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/alignRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/noArgRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/noAnyRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/memberOrderingRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/memberAccessRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/maxLineLengthRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/curlyRule.ts",
		"/Users/jkillian/projects/tslint/lib/language/rule/abstractRule.d.ts",
		"/Users/jkillian/projects/tslint/src/rules/objectLiteralSortKeysRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/tripleEqualsRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/switchDefaultRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/semicolonRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/noVarRequiresRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/noVarKeywordRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/noUseBeforeDeclareRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/noUnusedExpressionRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/noUnreachableRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/noTrailingWhitespaceRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/noShadowedVariableRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/noRequireImportsRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/noNullKeywordRule.ts",
		"/Users/jkillian/projects/tslint/src/ruleLoader.ts",
		"/Users/jkillian/projects/tslint/src/utils.ts",
		"/Users/jkillian/projects/tslint/src/rules/labelPositionRule.ts",
		"/Users/jkillian/projects/tslint/src/lint.ts",
		"/Users/jkillian/projects/tslint/Gruntfile.js",
		"/Users/jkillian/projects/tslint/docs/buildDocs.ts",
		"/Users/jkillian/projects/tslint/src/tsconfig.json",
		"/Users/jkillian/projects/tslint/tsd.json",
		"/Users/jkillian/projects/tslint/.gitignore",
		"/Users/jkillian/projects/tslint/src/rules/banRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/classNameRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/noBitwiseRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/noConditionalAssignmentRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/noConsecutiveBlankLinesRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/noConsoleRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/noConstructorVarsRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/noConstructRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/noDebuggerRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/noDuplicateKeyRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/noDuplicateVariableRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/noEmptyRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/noEvalRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/noInferrableTypesRule.ts",
		"/Users/jkillian/projects/tslint/src/rules/noInternalModuleRule.ts",
		"/Users/jkillian/projects/tslint/typings/js-yaml/js-yaml.d.ts",
		"/Users/jkillian/projects/tslint/lib/language/rule/rule.d.ts",
		"/Users/jkillian/projects/tslint/package.json",
		"/Users/jkillian/projects/tslint/docs/tsconfig.json",
		"/Users/jkillian/projects/tslint/lib/rules/alignRule.js",
		"/Users/jkillian/projects/tslint/lib/rules/memberAccessRule.js",
		"/Users/jkillian/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/jkillian/projects/tslint/lib/language/walker/syntaxWalker.js",
		"/Users/jkillian/projects/tslint/docs/sample.tslint.json",
		"/Users/jkillian/projects/tslint/src/language/walker/syntaxWalker.ts",
		"/Users/jkillian/projects/tslint/test/files/rules/norequireimports.test.ts",
		"/Users/jkillian/projects/tslint/src/configuration.ts",
		"/Users/jkillian/projects/tslint/typings/findup-sync/findup-sync.d.ts",
		"/Users/jkillian/projects/tslint/src/tslint.ts",
		"/Users/jkillian/projects/tslint/CHANGELOG.md",
		"/Users/jkillian/projects/tslint/CONTRIBUTING.md",
		"/Users/jkillian/projects/tslint/test/rules/quotemarkRuleTests.ts",
		"/Users/jkillian/projects/tslint/test/files/rules/quotemark.test.tsx",
		"/Users/jkillian/projects/tslint/README.md",
		"/Users/jkillian/projects/tslint/test/tsxTests.ts",
		"/Users/jkillian/projects/tslint/test/tsconfig.json",
		"/Users/jkillian/projects/tslint/node_modules/typescript/lib/typescript.d.ts",
		"/Users/jkillian/projects/tslint/src/tslint-cli.ts",
		"/Users/jkillian/projects/tslint/build/tests/test/tsxTests.js",
		"/Users/jkillian/projects/tslint/lib/configuration.js",
		"/Users/jkillian/projects/tslint/tslint.sublime-project",
		"/Users/jkillian/projects/tslint/test/formatters/externalFormatterTest.ts",
		"/Users/jkillian/projects/tslint/lib/tslint.js",
		"/Users/jkillian/projects/tslint/build/src/tslint.js",
		"/Users/jkillian/projects/blueprint/blueprint-angular/test/tsconfig.json",
		"/Users/jkillian/projects/blueprint/blueprint/src/_pt-buttons.scss",
		"/Users/jkillian/projects/blueprint/blueprint-components/src/common/detect.ts",
		"/Users/jkillian/projects/blueprint/config/tslint.json",
		"/Users/jkillian/projects/blueprint/blueprint-components/src/spinner/spinner.tsx",
		"/Users/jkillian/projects/blueprint/docs/src/styles/_sections.scss",
		"/Users/jkillian/projects/blueprint/blueprint-components/src/spinner/_spinner.scss",
		"/Users/jkillian/projects/blueprint/docs/src/main.tsx",
		"/Users/jkillian/projects/blueprint/blueprint-components/src/popover/popover.tsx",
		"/Users/jkillian/projects/blueprint/docs/src/components/spinnerExample.tsx",
		"/Users/jkillian/projects/blueprint/blueprint/src/blueprint.scss",
		"/Users/jkillian/projects/blueprint/docs/src/styleguide.md",
		"/Users/jkillian/projects/blueprint/blueprint-components/src/popover/_popover.scss",
		"/Users/jkillian/projects/blueprint/blueprint-components/test/tsconfig.json",
		"/Users/jkillian/projects/blueprint/blueprint-components/test/spinner/spinnerTests.tsx",
		"/Users/jkillian/projects/blueprint/blueprint-components/typings/classnames/classnames.d.ts",
		"/Users/jkillian/projects/blueprint/docs/tsconfig.json",
		"/Users/jkillian/projects/blueprint/blueprint-components/src/blueprint-components.scss",
		"/Users/jkillian/projects/blueprint/docs/tsd.json",
		"/Users/jkillian/projects/blueprint/docs/src/docs.scss",
		"/Users/jkillian/projects/blueprint/docs/typings/tsd.d.ts",
		"/Users/jkillian/projects/blueprint/blueprint-components/src/common/classes.ts",
		"/Users/jkillian/projects/blueprint/blueprint-components/tsconfig.json",
		"/Users/jkillian/projects/blueprint/docs/src/components/popoverExample.tsx",
		"/Users/jkillian/projects/blueprint/blueprint-components/src/common/detachableContainer.tsx",
		"/Users/jkillian/projects/blueprint/blueprint-components/tsd.json",
		"/Users/jkillian/projects/blueprint/blueprint-components/typings/tsd.d.ts",
		"/Users/jkillian/projects/blueprint/blueprint-components/typings/react/react.d.ts",
		"/Users/jkillian/projects/blueprint/docs/build/src/docs.js",
		"/Users/jkillian/projects/blueprint/blueprint-components/src/common/utils.ts",
		"/Users/jkillian/projects/blueprint/blueprint-components/test/spinner/spinnerTests.ts",
		"/Users/jkillian/projects/blueprint/docs/typings/dom4/dom4.d.ts",
		"/Users/jkillian/projects/blueprint/blueprint-components/src/spinner/api.tsx"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"for",
			"`",
			"run",
			"glob",
			"kind",
			"cwd",
			"chai",
			"findup",
			"public visitSourceFile",
			"public walk",
			"visitSourceFile",
			"walk",
			"OPTION_",
			"reactRender",
			"Popover",
			"TooltipPosition",
			"TooltipPostion",
			"TooltipPos",
			"popover",
			"base-typo",
			"body",
			"18px",
			"line-height: 16",
			"16px",
			"line-height",
			"dark",
			"pt-input-dark",
			"dark",
			"findDomnode",
			"JSX.Element",
			"track",
			"head",
			"medium",
			"revamp",
			"Overview",
			"StyleGuide 0",
			"Styleguide 0",
			"h5",
			"h3",
			"small",
			"12",
			"sizeClasses",
			"intentClasses",
			"SVGAtt",
			"SVGElementAttr",
			"SVGEleme",
			"'",
			"focus",
			"intent",
			"pt-button-intents",
			"intent",
			"ocus-",
			"focus-",
			"success",
			"%pt-button",
			"intent",
			"svg",
			"lint",
			"scss",
			"disable",
			"Linear Progress",
			"svg",
			"browserify",
			"@",
			"spinner",
			"radio",
			"white",
			"Color Aliases",
			"Color Aliases ",
			"brace",
			"submit",
			"button",
			"%pt-input",
			"focus",
			"content",
			"small-with-icon",
			"icon",
			"scss-lin",
			":disable",
			"disabled",
			":disabled",
			"lint",
			"disabled",
			"disabled,",
			"disabled",
			"disables",
			"disabled",
			"typeChecker.getSymbolAtLocation(ref",
			"typeChecker.getSymbol",
			"visitFunctionType",
			"fail",
			"addFail",
			"Node",
			"fileExtensionIs",
			"'test.tsx'",
			"FILENAME",
			"'test.tsx',",
			"tsx"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"\\`",
			"h4",
			"h5",
			"large",
			"11",
			"\"",
			"$"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "CHANGELOG.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11820,
						"regions":
						{
						},
						"selection":
						[
							[
								10590,
								10590
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 4,
								"tabSize": 4
							}
						},
						"translation.x": 0.0,
						"translation.y": 4334.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/rules/radixRule.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1490,
						"regions":
						{
						},
						"selection":
						[
							[
								890,
								890
							]
						],
						"settings":
						{
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 4,
								"tabSize": 4
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": ".travis.yml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 89,
						"regions":
						{
						},
						"selection":
						[
							[
								64,
								64
							]
						],
						"settings":
						{
							"syntax": "Packages/YAML/YAML.tmLanguage",
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 3,
								"tabSize": 3
							}
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "package.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1038,
						"regions":
						{
						},
						"selection":
						[
							[
								47,
								47
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/tslint.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3305,
						"regions":
						{
						},
						"selection":
						[
							[
								1119,
								1119
							]
						],
						"settings":
						{
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 4,
								"tabSize": 4
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "test/files/rules/label-undefined.test.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 662,
						"regions":
						{
						},
						"selection":
						[
							[
								216,
								216
							]
						],
						"settings":
						{
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"use_tab_stops": false
						},
						"translation.x": -0.0,
						"translation.y": 52.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/rules/labelUndefinedRule.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2198,
						"regions":
						{
						},
						"selection":
						[
							[
								794,
								794
							]
						],
						"settings":
						{
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "src/rules/whitespaceRule.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9430,
						"regions":
						{
						},
						"selection":
						[
							[
								1287,
								1287
							]
						],
						"settings":
						{
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 4,
								"tabSize": 4
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "src/language/utils.ts",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 4553,
						"regions":
						{
						},
						"selection":
						[
							[
								3335,
								3335
							]
						],
						"settings":
						{
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 4,
								"tabSize": 4
							},
							"use_tab_stops": false
						},
						"translation.x": -0.0,
						"translation.y": 418.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "src/rules/noVarKeywordRule.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2334,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "src/rules/alignRule.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3352,
						"regions":
						{
						},
						"selection":
						[
							[
								1010,
								1010
							]
						],
						"settings":
						{
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"use_tab_stops": false
						},
						"translation.x": -0.0,
						"translation.y": 798.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.doc":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 112.0
	},
	"pinned_build_system": "",
	"project": "tslint.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"travis",
				".travis.yml"
			],
			[
				"rad",
				"src/rules/radixRule.ts"
			],
			[
				"changel",
				"CHANGELOG.md"
			],
			[
				"varkeywo",
				"src/rules/noVarKeywordRule.ts"
			],
			[
				"labelunde",
				"src/rules/labelUndefinedRule.ts"
			],
			[
				"label-un",
				"test/files/rules/label-undefined.test.ts"
			],
			[
				"src/tsli",
				"src/tslint.ts"
			],
			[
				"package",
				"package.json"
			],
			[
				"src/ts",
				"src/tslint.ts"
			],
			[
				"packagejson",
				"package.json"
			],
			[
				"tslint",
				"tslint.json"
			],
			[
				"languagerule",
				"src/language/rule/rule.ts"
			],
			[
				"utils.ts",
				"src/utils.ts"
			],
			[
				"builddoc",
				"docs/buildDocs.ts"
			],
			[
				"ali",
				"src/rules/alignRule.ts"
			],
			[
				"utils",
				"src/utils.ts"
			],
			[
				"util",
				"src/utils.ts"
			],
			[
				"giti",
				".gitignore"
			],
			[
				"tsd",
				"tsd.json"
			],
			[
				"src/tsconfig.",
				"src/tsconfig.json"
			],
			[
				"grunt",
				"Gruntfile.js"
			],
			[
				"gruntfi",
				"Gruntfile.js"
			],
			[
				"curly",
				"src/rules/curlyRule.ts"
			],
			[
				"label",
				"src/rules/labelUndefinedRule.ts"
			],
			[
				"nounus",
				"src/rules/noUnusedVariableRule.ts"
			],
			[
				"object",
				"src/rules/objectLiteralSortKeysRule.ts"
			],
			[
				"whites",
				"src/rules/whitespaceRule.ts"
			],
			[
				"variablen",
				"src/rules/variableNameRule.ts"
			],
			[
				"usestr",
				"src/rules/useStrictRule.ts"
			],
			[
				"trailingc",
				"src/rules/trailingCommaRule.ts"
			],
			[
				"typdw",
				"src/rules/typedefWhitespaceRule.ts"
			],
			[
				"typedef",
				"src/rules/typedefRule.ts"
			],
			[
				"languagerulets",
				"src/language/rule/rule.ts"
			],
			[
				"trailing",
				"src/rules/trailingCommaRule.ts"
			],
			[
				"triple",
				"src/rules/tripleEqualsRule.ts"
			],
			[
				"switchdef",
				"src/rules/switchDefaultRule.ts"
			],
			[
				"semicol",
				"src/rules/semicolonRule.ts"
			],
			[
				"radixru",
				"src/rules/radixRule.ts"
			],
			[
				"quotemark",
				"src/rules/quotemarkRule.ts"
			],
			[
				"onelin",
				"src/rules/oneLineRule.ts"
			],
			[
				"objectlit",
				"src/rules/objectLiteralSortKeysRule.ts"
			],
			[
				"novarreqts",
				"src/rules/noVarRequiresRule.ts"
			],
			[
				"novarts",
				"src/rules/noVarKeywordRule.ts"
			],
			[
				"nousebeforets",
				"src/rules/noUseBeforeDeclareRule.ts"
			],
			[
				"alignrulets",
				"src/rules/alignRule.ts"
			],
			[
				"nounusedvar",
				"src/rules/noUnusedVariableRule.ts"
			],
			[
				"nounusedexp",
				"src/rules/noUnusedExpressionRule.ts"
			],
			[
				"nounreach",
				"src/rules/noUnreachableRule.ts"
			],
			[
				"notrail",
				"src/rules/noTrailingWhitespaceRule.ts"
			],
			[
				"noswit",
				"src/rules/noSwitchCaseFallThroughRule.ts"
			],
			[
				"nostringl",
				"src/rules/noStringLiteralRule.ts"
			],
			[
				"noshadts",
				"src/rules/noShadowedVariableRule.ts"
			],
			[
				"noreqts",
				"src/rules/noRequireImportsRule.ts"
			],
			[
				"nonullts",
				"src/rules/noNullKeywordRule.ts"
			],
			[
				"nointer",
				"src/rules/noInternalModuleRule.ts"
			],
			[
				"noinferr",
				"src/rules/noInferrableTypesRule.ts"
			],
			[
				"noeval",
				"src/rules/noEvalRule.ts"
			],
			[
				"noempt",
				"src/rules/noEmptyRule.ts"
			],
			[
				"nodupvar",
				"src/rules/noDuplicateVariableRule.ts"
			],
			[
				"duplicate",
				"src/rules/noDuplicateKeyRule.ts"
			],
			[
				"al",
				"src/rules/alignRule.ts"
			],
			[
				"memberaccess",
				"src/rules/memberAccessRule.ts"
			],
			[
				"membera",
				"lib/rules/memberAccessRule.js"
			],
			[
				"max",
				"src/rules/maxLineLengthRule.ts"
			],
			[
				"labelun",
				"src/rules/labelUndefinedRule.ts"
			],
			[
				"indentrul",
				"src/rules/indentRule.ts"
			],
			[
				"commentf",
				"src/rules/commentFormatRule.ts"
			],
			[
				"jsd",
				"src/rules/jsdocFormatRule.ts"
			],
			[
				"comment",
				"src/rules/commentFormatRule.ts"
			],
			[
				"indentrule",
				"src/rules/indentRule.ts"
			],
			[
				"align",
				"src/rules/alignRule.ts"
			],
			[
				"eof",
				"src/rules/eoflineRule.ts"
			],
			[
				"class",
				"src/rules/classNameRule.ts"
			],
			[
				"alignru",
				"src/rules/alignRule.ts"
			],
			[
				"nocons",
				"src/rules/noConsoleRule.ts"
			],
			[
				"classname",
				"src/rules/classNameRule.ts"
			],
			[
				"banrule",
				"src/rules/banRule.ts"
			],
			[
				"alignr",
				"src/rules/alignRule.ts"
			],
			[
				"noconsole",
				"src/rules/noConsoleRule.ts"
			],
			[
				"rule.ts",
				"src/language/rule/rule.ts"
			],
			[
				"banrul",
				"src/rules/banRule.ts"
			],
			[
				"tslint.",
				"tslint.json"
			],
			[
				"classna",
				"src/rules/classNameRule.ts"
			],
			[
				"bants",
				"src/rules/banRule.ts"
			],
			[
				"gruntf",
				"Gruntfile.js"
			],
			[
				"ruleloaderts",
				"src/ruleLoader.ts"
			],
			[
				"gruntif",
				"Gruntfile.js"
			],
			[
				"syntaxwalker",
				"src/language/walker/syntaxWalker.ts"
			],
			[
				"norequireimpo",
				"test/files/rules/norequireimports.test.ts"
			],
			[
				"bitwise",
				"src/rules/noBitwiseRule.ts"
			],
			[
				"cli",
				"src/tslint-cli.ts"
			],
			[
				"usestrictts",
				"src/rules/useStrictRule.ts"
			],
			[
				"typedefrule",
				"src/rules/typedefRule.ts"
			],
			[
				"sample",
				"docs/sample.tslint.json"
			],
			[
				"readme",
				"README.md"
			],
			[
				"tslint.ts",
				"src/tslint.ts"
			],
			[
				"tslintjson",
				"tslint.json"
			],
			[
				"srctslint",
				"src/tslint.ts"
			],
			[
				"lintts",
				"src/lint.ts"
			],
			[
				"gruntfil",
				"Gruntfile.js"
			],
			[
				"nousebe",
				"src/rules/noUseBeforeDeclareRule.ts"
			],
			[
				"nousebef",
				"src/rules/noUseBeforeDeclareRule.ts"
			],
			[
				"unusedv",
				"src/rules/noUnusedVariableRule.ts"
			],
			[
				"quotemarkte",
				"test/rules/quotemarkRuleTests.ts"
			],
			[
				"quotem",
				"src/rules/quotemarkRule.ts"
			],
			[
				"gruntfile",
				"Gruntfile.js"
			],
			[
				"configjs",
				"lib/configuration.js"
			],
			[
				"config",
				"src/configuration.ts"
			],
			[
				"tsxtests.js",
				"build/tests/test/tsxTests.js"
			],
			[
				"tsxtests.",
				"test/tsxTests.ts"
			],
			[
				"lib/c",
				"lib/configuration.js"
			],
			[
				"configu",
				"src/configuration.ts"
			],
			[
				"lint.ts",
				"src/lint.ts"
			],
			[
				"nounusedvaria",
				"src/rules/noUnusedVariableRule.ts"
			],
			[
				"mixins",
				"blueprint-components/src/popover/shared/_mixins.scss"
			],
			[
				"tooltip",
				"blueprint-components/src/tooltip/_tooltip.scss"
			],
			[
				"tooltipexa",
				"docs/src/components/tooltipExample.tsx"
			],
			[
				"tooltipexamp",
				"docs/src/components/tooltipExample.tsx"
			],
			[
				"popovershar",
				"blueprint-components/src/popover/shared/_mixins.scss"
			],
			[
				"dialog",
				"blueprint-angular/test/dialogServiceTests.ts"
			],
			[
				"bcttscon",
				"blueprint-components/test/tsconfig.json"
			],
			[
				"blueprinttesttscon",
				"blueprint-angular/test/tsconfig.json"
			],
			[
				"blueprinttscongi",
				"blueprint-components/tsconfig.json"
			],
			[
				"popovertsx",
				"blueprint-components/src/popover/popover.tsx"
			],
			[
				"tooltiptsx",
				"blueprint-components/src/tooltip/tooltip.tsx"
			],
			[
				"variables",
				"dist/blueprint/variables.scss"
			],
			[
				"tooltips",
				"blueprint-components/src/tooltip/_tooltip.scss"
			],
			[
				"tsconfig",
				"docs/tsconfig.json"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 252.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
