{
	"name" : "Core",
	"sources" : ["Source/Atomic/Core", "Source/Atomic/BuildInfo"],
	"includes": [
		"<Atomic/Engine/Engine.h>",
		"<Atomic/Network/Network.h>",
		"<Atomic/Web/Web.h>",
		"<Atomic/Input/Input.h>",
		"<Atomic/Audio/Audio.h>",
		"<Atomic/UI/UI.h>",
		"<Atomic/Graphics/Graphics.h>",
		"<Atomic/Graphics/Renderer.h>",
		"<Atomic/Metrics/Metrics.h>"
	],
	"classes" : ["Context", "Object", "AtomicBuildInfo", "Time", "Profiler"],
	"classes_rename" : {
		"Object" : "AObject"
	},
	"excludes" : {
		"Object" : {
			"SendEvent" : ["StringHash"]
		},
		"Context" : {
			"GetTypeName" : ["StringHash"],
			"RequireIK" : [],
			"ReleaseIK" : []
		},
		"CSharp" : {
			"Object" : {
				"UnsubscribeFromAllEvents" : []
			},
			"Profiler": {
				"EndBlock" : []
			}
		}
	},
	"overloads" : {
		"Object" : {
			"UnsubscribeFromEvent" : ["StringHash"]
		}
	},
	"typescript_decl" : {

		"Object" : [
			"sendEvent(eventType:string, data?:Object);",
			"sendEvent<T extends Atomic.EventCallbackMetaData>(eventCallbackMetaData:T);",
			"subscribeToEvent(eventType:string, callback:(data:any) => void);",
			"subscribeToEvent(sender:AObject, eventType:string, callback:(data: any) => void);",
			"subscribeToEvent(eventMetaData:Atomic.EventMetaData);",
			"subscribeToEvent(sender:AObject, eventMetaData:Atomic.EventMetaData);"
		],
		"Profiler" : [
			"beginBlock(name:string, filename:string, line:number, argb?:number, status?:Atomic.ProfilerBlockStatus );"
		]
	},
	"haxe_decl" : {

		"Object" : [
			"function sendEvent(eventType:String, ?data:Dynamic):Void;",
			"@:overload(function(sender:AObject, eventType:String, callback:Dynamic->Void):Void{})",
			"function subscribeToEvent(eventType:String, callback:Dynamic->Void):Void;"
		]
	}
}
